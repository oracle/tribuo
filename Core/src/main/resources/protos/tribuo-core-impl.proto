/*
 * Copyright (c) 2022, Oracle and/or its affiliates. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

/*
 * Protos for serializing Tribuo core types and interfaces.
 */
package tribuo.core;

option java_multiple_files = true;
option java_package = "org.tribuo.protos.core";

// Import Tribuo's core protos
import "tribuo-core.proto";

// Import OLCUT's provenance proto
import "olcut_proto.proto";

/*
HashedFeatureMap proto
 */
message HashedFeatureMapProto {
  HasherProto hasher = 1;
  repeated VariableInfoProto info = 2;
}

/*
ImmutableFeatureMap proto
 */
message ImmutableFeatureMapProto {
  repeated VariableInfoProto info = 1;
}

/*
MutableFeatureMap proto
 */
message MutableFeatureMapProto {
  bool convert_high_cardinality = 1;
  repeated VariableInfoProto info = 2;
}

/*
RealInfo proto
 */
message RealInfoProto {
  string name = 1;
  int32 count = 2;
  double max = 10;
  double min = 11;
  double mean = 12;
  double sumSquares = 13;
}

/*
RealIDInfo proto
 */
message RealIDInfoProto {
  string name = 1;
  int32 count = 2;
  int32 id = 3;
  double max = 10;
  double min = 11;
  double mean = 12;
  double sumSquares = 13;
}

/*
CategoricalInfo proto
 */
message CategoricalInfoProto {
  string name = 1;
  int32 count = 2;
  repeated double key = 10;
  repeated int64 value = 11;
  double observed_value = 12;
  int64 observed_count = 13;
}

/*
CategoricalIDInfo proto
 */
message CategoricalIDInfoProto {
  string name = 1;
  int32 count = 2;
  int32 id = 3;
  repeated double key = 10;
  repeated int64 value = 11;
  double observed_value = 12;
  int64 observed_count = 13;
}

/*
MessageDigestHasher proto
 */
message MessageDigestHasherProto {
  string hash_type = 1;
}

/*
ModHashCodeHasher proto
 */
message ModHashCodeHasherProto {
  int32 dimension = 1;
}

/*
SimpleTransform proto
 */
message SimpleTransformProto {
  string op = 1;
  double first_operand = 2;
  double second_operand = 3;
}

/*
MeanStdDevTransformer proto
 */
message MeanStdDevTransformerProto {
  double observedMean = 1;
  double observedStdDev = 2;
  double targetMean = 3;
  double targetStdDev = 4;
}

/*
LinearScalingTransformer proto
 */
message LinearScalingTransformerProto {
  double observedMin = 1;
  double observedMax = 2;
  double targetMin = 3;
  double targetMax = 4;
}

/*
IDFTransformer proto
 */
message IDFTransformerProto {
  double df = 1;
  double N = 2;
}

/*
BinningTransformer proto
 */
message BinningTransformerProto {
  string binning_type = 1;
  repeated double bins = 2;
  repeated double values = 3;
}
