// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tribuo-core-test.proto

package org.tribuo.test.protos;

/**
 * <pre>
 *CountTransformer proto
 * </pre>
 *
 * Protobuf type {@code tribuo.core.TestCountTransformerProto}
 */
public final class TestCountTransformerProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tribuo.core.TestCountTransformerProto)
    TestCountTransformerProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestCountTransformerProto.newBuilder() to construct.
  private TestCountTransformerProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestCountTransformerProto() {
    countMapKeys_ = emptyDoubleList();
    countMapValues_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestCountTransformerProto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TestCountTransformerProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            count_ = input.readInt32();
            break;
          }
          case 16: {

            sparseCount_ = input.readInt32();
            break;
          }
          case 25: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              countMapKeys_ = newDoubleList();
              mutable_bitField0_ |= 0x00000001;
            }
            countMapKeys_.addDouble(input.readDouble());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              countMapKeys_ = newDoubleList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              countMapKeys_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              countMapValues_ = newLongList();
              mutable_bitField0_ |= 0x00000002;
            }
            countMapValues_.addLong(input.readInt64());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              countMapValues_ = newLongList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              countMapValues_.addLong(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        countMapKeys_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        countMapValues_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tribuo.test.protos.TribuoCoreTest.internal_static_tribuo_core_TestCountTransformerProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tribuo.test.protos.TribuoCoreTest.internal_static_tribuo_core_TestCountTransformerProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tribuo.test.protos.TestCountTransformerProto.class, org.tribuo.test.protos.TestCountTransformerProto.Builder.class);
  }

  public static final int COUNT_FIELD_NUMBER = 1;
  private int count_;
  /**
   * <code>int32 count = 1;</code>
   * @return The count.
   */
  @java.lang.Override
  public int getCount() {
    return count_;
  }

  public static final int SPARSECOUNT_FIELD_NUMBER = 2;
  private int sparseCount_;
  /**
   * <code>int32 sparseCount = 2;</code>
   * @return The sparseCount.
   */
  @java.lang.Override
  public int getSparseCount() {
    return sparseCount_;
  }

  public static final int COUNTMAPKEYS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.DoubleList countMapKeys_;
  /**
   * <code>repeated double countMapKeys = 3;</code>
   * @return A list containing the countMapKeys.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getCountMapKeysList() {
    return countMapKeys_;
  }
  /**
   * <code>repeated double countMapKeys = 3;</code>
   * @return The count of countMapKeys.
   */
  public int getCountMapKeysCount() {
    return countMapKeys_.size();
  }
  /**
   * <code>repeated double countMapKeys = 3;</code>
   * @param index The index of the element to return.
   * @return The countMapKeys at the given index.
   */
  public double getCountMapKeys(int index) {
    return countMapKeys_.getDouble(index);
  }
  private int countMapKeysMemoizedSerializedSize = -1;

  public static final int COUNTMAPVALUES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.LongList countMapValues_;
  /**
   * <code>repeated int64 countMapValues = 4;</code>
   * @return A list containing the countMapValues.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getCountMapValuesList() {
    return countMapValues_;
  }
  /**
   * <code>repeated int64 countMapValues = 4;</code>
   * @return The count of countMapValues.
   */
  public int getCountMapValuesCount() {
    return countMapValues_.size();
  }
  /**
   * <code>repeated int64 countMapValues = 4;</code>
   * @param index The index of the element to return.
   * @return The countMapValues at the given index.
   */
  public long getCountMapValues(int index) {
    return countMapValues_.getLong(index);
  }
  private int countMapValuesMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (count_ != 0) {
      output.writeInt32(1, count_);
    }
    if (sparseCount_ != 0) {
      output.writeInt32(2, sparseCount_);
    }
    if (getCountMapKeysList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(countMapKeysMemoizedSerializedSize);
    }
    for (int i = 0; i < countMapKeys_.size(); i++) {
      output.writeDoubleNoTag(countMapKeys_.getDouble(i));
    }
    if (getCountMapValuesList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(countMapValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < countMapValues_.size(); i++) {
      output.writeInt64NoTag(countMapValues_.getLong(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (count_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, count_);
    }
    if (sparseCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, sparseCount_);
    }
    {
      int dataSize = 0;
      dataSize = 8 * getCountMapKeysList().size();
      size += dataSize;
      if (!getCountMapKeysList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      countMapKeysMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < countMapValues_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(countMapValues_.getLong(i));
      }
      size += dataSize;
      if (!getCountMapValuesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      countMapValuesMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tribuo.test.protos.TestCountTransformerProto)) {
      return super.equals(obj);
    }
    org.tribuo.test.protos.TestCountTransformerProto other = (org.tribuo.test.protos.TestCountTransformerProto) obj;

    if (getCount()
        != other.getCount()) return false;
    if (getSparseCount()
        != other.getSparseCount()) return false;
    if (!getCountMapKeysList()
        .equals(other.getCountMapKeysList())) return false;
    if (!getCountMapValuesList()
        .equals(other.getCountMapValuesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getCount();
    hash = (37 * hash) + SPARSECOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getSparseCount();
    if (getCountMapKeysCount() > 0) {
      hash = (37 * hash) + COUNTMAPKEYS_FIELD_NUMBER;
      hash = (53 * hash) + getCountMapKeysList().hashCode();
    }
    if (getCountMapValuesCount() > 0) {
      hash = (37 * hash) + COUNTMAPVALUES_FIELD_NUMBER;
      hash = (53 * hash) + getCountMapValuesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.test.protos.TestCountTransformerProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tribuo.test.protos.TestCountTransformerProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *CountTransformer proto
   * </pre>
   *
   * Protobuf type {@code tribuo.core.TestCountTransformerProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tribuo.core.TestCountTransformerProto)
      org.tribuo.test.protos.TestCountTransformerProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tribuo.test.protos.TribuoCoreTest.internal_static_tribuo_core_TestCountTransformerProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tribuo.test.protos.TribuoCoreTest.internal_static_tribuo_core_TestCountTransformerProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tribuo.test.protos.TestCountTransformerProto.class, org.tribuo.test.protos.TestCountTransformerProto.Builder.class);
    }

    // Construct using org.tribuo.test.protos.TestCountTransformerProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      count_ = 0;

      sparseCount_ = 0;

      countMapKeys_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000001);
      countMapValues_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tribuo.test.protos.TribuoCoreTest.internal_static_tribuo_core_TestCountTransformerProto_descriptor;
    }

    @java.lang.Override
    public org.tribuo.test.protos.TestCountTransformerProto getDefaultInstanceForType() {
      return org.tribuo.test.protos.TestCountTransformerProto.getDefaultInstance();
    }

    @java.lang.Override
    public org.tribuo.test.protos.TestCountTransformerProto build() {
      org.tribuo.test.protos.TestCountTransformerProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tribuo.test.protos.TestCountTransformerProto buildPartial() {
      org.tribuo.test.protos.TestCountTransformerProto result = new org.tribuo.test.protos.TestCountTransformerProto(this);
      int from_bitField0_ = bitField0_;
      result.count_ = count_;
      result.sparseCount_ = sparseCount_;
      if (((bitField0_ & 0x00000001) != 0)) {
        countMapKeys_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.countMapKeys_ = countMapKeys_;
      if (((bitField0_ & 0x00000002) != 0)) {
        countMapValues_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.countMapValues_ = countMapValues_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tribuo.test.protos.TestCountTransformerProto) {
        return mergeFrom((org.tribuo.test.protos.TestCountTransformerProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tribuo.test.protos.TestCountTransformerProto other) {
      if (other == org.tribuo.test.protos.TestCountTransformerProto.getDefaultInstance()) return this;
      if (other.getCount() != 0) {
        setCount(other.getCount());
      }
      if (other.getSparseCount() != 0) {
        setSparseCount(other.getSparseCount());
      }
      if (!other.countMapKeys_.isEmpty()) {
        if (countMapKeys_.isEmpty()) {
          countMapKeys_ = other.countMapKeys_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureCountMapKeysIsMutable();
          countMapKeys_.addAll(other.countMapKeys_);
        }
        onChanged();
      }
      if (!other.countMapValues_.isEmpty()) {
        if (countMapValues_.isEmpty()) {
          countMapValues_ = other.countMapValues_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureCountMapValuesIsMutable();
          countMapValues_.addAll(other.countMapValues_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tribuo.test.protos.TestCountTransformerProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tribuo.test.protos.TestCountTransformerProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int count_ ;
    /**
     * <code>int32 count = 1;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }
    /**
     * <code>int32 count = 1;</code>
     * @param value The count to set.
     * @return This builder for chaining.
     */
    public Builder setCount(int value) {
      
      count_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 count = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCount() {
      
      count_ = 0;
      onChanged();
      return this;
    }

    private int sparseCount_ ;
    /**
     * <code>int32 sparseCount = 2;</code>
     * @return The sparseCount.
     */
    @java.lang.Override
    public int getSparseCount() {
      return sparseCount_;
    }
    /**
     * <code>int32 sparseCount = 2;</code>
     * @param value The sparseCount to set.
     * @return This builder for chaining.
     */
    public Builder setSparseCount(int value) {
      
      sparseCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 sparseCount = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSparseCount() {
      
      sparseCount_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList countMapKeys_ = emptyDoubleList();
    private void ensureCountMapKeysIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        countMapKeys_ = mutableCopy(countMapKeys_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @return A list containing the countMapKeys.
     */
    public java.util.List<java.lang.Double>
        getCountMapKeysList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(countMapKeys_) : countMapKeys_;
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @return The count of countMapKeys.
     */
    public int getCountMapKeysCount() {
      return countMapKeys_.size();
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @param index The index of the element to return.
     * @return The countMapKeys at the given index.
     */
    public double getCountMapKeys(int index) {
      return countMapKeys_.getDouble(index);
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @param index The index to set the value at.
     * @param value The countMapKeys to set.
     * @return This builder for chaining.
     */
    public Builder setCountMapKeys(
        int index, double value) {
      ensureCountMapKeysIsMutable();
      countMapKeys_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @param value The countMapKeys to add.
     * @return This builder for chaining.
     */
    public Builder addCountMapKeys(double value) {
      ensureCountMapKeysIsMutable();
      countMapKeys_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @param values The countMapKeys to add.
     * @return This builder for chaining.
     */
    public Builder addAllCountMapKeys(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureCountMapKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, countMapKeys_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double countMapKeys = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCountMapKeys() {
      countMapKeys_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList countMapValues_ = emptyLongList();
    private void ensureCountMapValuesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        countMapValues_ = mutableCopy(countMapValues_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @return A list containing the countMapValues.
     */
    public java.util.List<java.lang.Long>
        getCountMapValuesList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(countMapValues_) : countMapValues_;
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @return The count of countMapValues.
     */
    public int getCountMapValuesCount() {
      return countMapValues_.size();
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @param index The index of the element to return.
     * @return The countMapValues at the given index.
     */
    public long getCountMapValues(int index) {
      return countMapValues_.getLong(index);
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @param index The index to set the value at.
     * @param value The countMapValues to set.
     * @return This builder for chaining.
     */
    public Builder setCountMapValues(
        int index, long value) {
      ensureCountMapValuesIsMutable();
      countMapValues_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @param value The countMapValues to add.
     * @return This builder for chaining.
     */
    public Builder addCountMapValues(long value) {
      ensureCountMapValuesIsMutable();
      countMapValues_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @param values The countMapValues to add.
     * @return This builder for chaining.
     */
    public Builder addAllCountMapValues(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureCountMapValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, countMapValues_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 countMapValues = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCountMapValues() {
      countMapValues_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tribuo.core.TestCountTransformerProto)
  }

  // @@protoc_insertion_point(class_scope:tribuo.core.TestCountTransformerProto)
  private static final org.tribuo.test.protos.TestCountTransformerProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tribuo.test.protos.TestCountTransformerProto();
  }

  public static org.tribuo.test.protos.TestCountTransformerProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestCountTransformerProto>
      PARSER = new com.google.protobuf.AbstractParser<TestCountTransformerProto>() {
    @java.lang.Override
    public TestCountTransformerProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TestCountTransformerProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TestCountTransformerProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestCountTransformerProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tribuo.test.protos.TestCountTransformerProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

