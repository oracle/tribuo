// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tribuo-tree.proto

package org.tribuo.common.tree.protos;

/**
 * <pre>
 *SplitNode proto
 * </pre>
 *
 * Protobuf type {@code tribuo.common.tree.SplitNodeProto}
 */
public final class SplitNodeProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tribuo.common.tree.SplitNodeProto)
    SplitNodeProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SplitNodeProto.newBuilder() to construct.
  private SplitNodeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SplitNodeProto() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SplitNodeProto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SplitNodeProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            parentIdx_ = input.readInt32();
            break;
          }
          case 16: {

            curIdx_ = input.readInt32();
            break;
          }
          case 24: {

            greaterThanIdx_ = input.readInt32();
            break;
          }
          case 32: {

            lessThanOrEqualIdx_ = input.readInt32();
            break;
          }
          case 40: {

            splitFeatureIdx_ = input.readInt32();
            break;
          }
          case 49: {

            splitValue_ = input.readDouble();
            break;
          }
          case 57: {

            impurity_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tribuo.common.tree.protos.TribuoTree.internal_static_tribuo_common_tree_SplitNodeProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tribuo.common.tree.protos.TribuoTree.internal_static_tribuo_common_tree_SplitNodeProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tribuo.common.tree.protos.SplitNodeProto.class, org.tribuo.common.tree.protos.SplitNodeProto.Builder.class);
  }

  public static final int PARENT_IDX_FIELD_NUMBER = 1;
  private int parentIdx_;
  /**
   * <code>int32 parent_idx = 1;</code>
   * @return The parentIdx.
   */
  @java.lang.Override
  public int getParentIdx() {
    return parentIdx_;
  }

  public static final int CUR_IDX_FIELD_NUMBER = 2;
  private int curIdx_;
  /**
   * <code>int32 cur_idx = 2;</code>
   * @return The curIdx.
   */
  @java.lang.Override
  public int getCurIdx() {
    return curIdx_;
  }

  public static final int GREATER_THAN_IDX_FIELD_NUMBER = 3;
  private int greaterThanIdx_;
  /**
   * <code>int32 greater_than_idx = 3;</code>
   * @return The greaterThanIdx.
   */
  @java.lang.Override
  public int getGreaterThanIdx() {
    return greaterThanIdx_;
  }

  public static final int LESS_THAN_OR_EQUAL_IDX_FIELD_NUMBER = 4;
  private int lessThanOrEqualIdx_;
  /**
   * <code>int32 less_than_or_equal_idx = 4;</code>
   * @return The lessThanOrEqualIdx.
   */
  @java.lang.Override
  public int getLessThanOrEqualIdx() {
    return lessThanOrEqualIdx_;
  }

  public static final int SPLIT_FEATURE_IDX_FIELD_NUMBER = 5;
  private int splitFeatureIdx_;
  /**
   * <code>int32 split_feature_idx = 5;</code>
   * @return The splitFeatureIdx.
   */
  @java.lang.Override
  public int getSplitFeatureIdx() {
    return splitFeatureIdx_;
  }

  public static final int SPLIT_VALUE_FIELD_NUMBER = 6;
  private double splitValue_;
  /**
   * <code>double split_value = 6;</code>
   * @return The splitValue.
   */
  @java.lang.Override
  public double getSplitValue() {
    return splitValue_;
  }

  public static final int IMPURITY_FIELD_NUMBER = 7;
  private double impurity_;
  /**
   * <code>double impurity = 7;</code>
   * @return The impurity.
   */
  @java.lang.Override
  public double getImpurity() {
    return impurity_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (parentIdx_ != 0) {
      output.writeInt32(1, parentIdx_);
    }
    if (curIdx_ != 0) {
      output.writeInt32(2, curIdx_);
    }
    if (greaterThanIdx_ != 0) {
      output.writeInt32(3, greaterThanIdx_);
    }
    if (lessThanOrEqualIdx_ != 0) {
      output.writeInt32(4, lessThanOrEqualIdx_);
    }
    if (splitFeatureIdx_ != 0) {
      output.writeInt32(5, splitFeatureIdx_);
    }
    if (java.lang.Double.doubleToRawLongBits(splitValue_) != 0) {
      output.writeDouble(6, splitValue_);
    }
    if (java.lang.Double.doubleToRawLongBits(impurity_) != 0) {
      output.writeDouble(7, impurity_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (parentIdx_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, parentIdx_);
    }
    if (curIdx_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, curIdx_);
    }
    if (greaterThanIdx_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, greaterThanIdx_);
    }
    if (lessThanOrEqualIdx_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, lessThanOrEqualIdx_);
    }
    if (splitFeatureIdx_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, splitFeatureIdx_);
    }
    if (java.lang.Double.doubleToRawLongBits(splitValue_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, splitValue_);
    }
    if (java.lang.Double.doubleToRawLongBits(impurity_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, impurity_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tribuo.common.tree.protos.SplitNodeProto)) {
      return super.equals(obj);
    }
    org.tribuo.common.tree.protos.SplitNodeProto other = (org.tribuo.common.tree.protos.SplitNodeProto) obj;

    if (getParentIdx()
        != other.getParentIdx()) return false;
    if (getCurIdx()
        != other.getCurIdx()) return false;
    if (getGreaterThanIdx()
        != other.getGreaterThanIdx()) return false;
    if (getLessThanOrEqualIdx()
        != other.getLessThanOrEqualIdx()) return false;
    if (getSplitFeatureIdx()
        != other.getSplitFeatureIdx()) return false;
    if (java.lang.Double.doubleToLongBits(getSplitValue())
        != java.lang.Double.doubleToLongBits(
            other.getSplitValue())) return false;
    if (java.lang.Double.doubleToLongBits(getImpurity())
        != java.lang.Double.doubleToLongBits(
            other.getImpurity())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PARENT_IDX_FIELD_NUMBER;
    hash = (53 * hash) + getParentIdx();
    hash = (37 * hash) + CUR_IDX_FIELD_NUMBER;
    hash = (53 * hash) + getCurIdx();
    hash = (37 * hash) + GREATER_THAN_IDX_FIELD_NUMBER;
    hash = (53 * hash) + getGreaterThanIdx();
    hash = (37 * hash) + LESS_THAN_OR_EQUAL_IDX_FIELD_NUMBER;
    hash = (53 * hash) + getLessThanOrEqualIdx();
    hash = (37 * hash) + SPLIT_FEATURE_IDX_FIELD_NUMBER;
    hash = (53 * hash) + getSplitFeatureIdx();
    hash = (37 * hash) + SPLIT_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSplitValue()));
    hash = (37 * hash) + IMPURITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getImpurity()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.common.tree.protos.SplitNodeProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tribuo.common.tree.protos.SplitNodeProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *SplitNode proto
   * </pre>
   *
   * Protobuf type {@code tribuo.common.tree.SplitNodeProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tribuo.common.tree.SplitNodeProto)
      org.tribuo.common.tree.protos.SplitNodeProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tribuo.common.tree.protos.TribuoTree.internal_static_tribuo_common_tree_SplitNodeProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tribuo.common.tree.protos.TribuoTree.internal_static_tribuo_common_tree_SplitNodeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tribuo.common.tree.protos.SplitNodeProto.class, org.tribuo.common.tree.protos.SplitNodeProto.Builder.class);
    }

    // Construct using org.tribuo.common.tree.protos.SplitNodeProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      parentIdx_ = 0;

      curIdx_ = 0;

      greaterThanIdx_ = 0;

      lessThanOrEqualIdx_ = 0;

      splitFeatureIdx_ = 0;

      splitValue_ = 0D;

      impurity_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tribuo.common.tree.protos.TribuoTree.internal_static_tribuo_common_tree_SplitNodeProto_descriptor;
    }

    @java.lang.Override
    public org.tribuo.common.tree.protos.SplitNodeProto getDefaultInstanceForType() {
      return org.tribuo.common.tree.protos.SplitNodeProto.getDefaultInstance();
    }

    @java.lang.Override
    public org.tribuo.common.tree.protos.SplitNodeProto build() {
      org.tribuo.common.tree.protos.SplitNodeProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tribuo.common.tree.protos.SplitNodeProto buildPartial() {
      org.tribuo.common.tree.protos.SplitNodeProto result = new org.tribuo.common.tree.protos.SplitNodeProto(this);
      result.parentIdx_ = parentIdx_;
      result.curIdx_ = curIdx_;
      result.greaterThanIdx_ = greaterThanIdx_;
      result.lessThanOrEqualIdx_ = lessThanOrEqualIdx_;
      result.splitFeatureIdx_ = splitFeatureIdx_;
      result.splitValue_ = splitValue_;
      result.impurity_ = impurity_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tribuo.common.tree.protos.SplitNodeProto) {
        return mergeFrom((org.tribuo.common.tree.protos.SplitNodeProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tribuo.common.tree.protos.SplitNodeProto other) {
      if (other == org.tribuo.common.tree.protos.SplitNodeProto.getDefaultInstance()) return this;
      if (other.getParentIdx() != 0) {
        setParentIdx(other.getParentIdx());
      }
      if (other.getCurIdx() != 0) {
        setCurIdx(other.getCurIdx());
      }
      if (other.getGreaterThanIdx() != 0) {
        setGreaterThanIdx(other.getGreaterThanIdx());
      }
      if (other.getLessThanOrEqualIdx() != 0) {
        setLessThanOrEqualIdx(other.getLessThanOrEqualIdx());
      }
      if (other.getSplitFeatureIdx() != 0) {
        setSplitFeatureIdx(other.getSplitFeatureIdx());
      }
      if (other.getSplitValue() != 0D) {
        setSplitValue(other.getSplitValue());
      }
      if (other.getImpurity() != 0D) {
        setImpurity(other.getImpurity());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tribuo.common.tree.protos.SplitNodeProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tribuo.common.tree.protos.SplitNodeProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int parentIdx_ ;
    /**
     * <code>int32 parent_idx = 1;</code>
     * @return The parentIdx.
     */
    @java.lang.Override
    public int getParentIdx() {
      return parentIdx_;
    }
    /**
     * <code>int32 parent_idx = 1;</code>
     * @param value The parentIdx to set.
     * @return This builder for chaining.
     */
    public Builder setParentIdx(int value) {
      
      parentIdx_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 parent_idx = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearParentIdx() {
      
      parentIdx_ = 0;
      onChanged();
      return this;
    }

    private int curIdx_ ;
    /**
     * <code>int32 cur_idx = 2;</code>
     * @return The curIdx.
     */
    @java.lang.Override
    public int getCurIdx() {
      return curIdx_;
    }
    /**
     * <code>int32 cur_idx = 2;</code>
     * @param value The curIdx to set.
     * @return This builder for chaining.
     */
    public Builder setCurIdx(int value) {
      
      curIdx_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 cur_idx = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCurIdx() {
      
      curIdx_ = 0;
      onChanged();
      return this;
    }

    private int greaterThanIdx_ ;
    /**
     * <code>int32 greater_than_idx = 3;</code>
     * @return The greaterThanIdx.
     */
    @java.lang.Override
    public int getGreaterThanIdx() {
      return greaterThanIdx_;
    }
    /**
     * <code>int32 greater_than_idx = 3;</code>
     * @param value The greaterThanIdx to set.
     * @return This builder for chaining.
     */
    public Builder setGreaterThanIdx(int value) {
      
      greaterThanIdx_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 greater_than_idx = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearGreaterThanIdx() {
      
      greaterThanIdx_ = 0;
      onChanged();
      return this;
    }

    private int lessThanOrEqualIdx_ ;
    /**
     * <code>int32 less_than_or_equal_idx = 4;</code>
     * @return The lessThanOrEqualIdx.
     */
    @java.lang.Override
    public int getLessThanOrEqualIdx() {
      return lessThanOrEqualIdx_;
    }
    /**
     * <code>int32 less_than_or_equal_idx = 4;</code>
     * @param value The lessThanOrEqualIdx to set.
     * @return This builder for chaining.
     */
    public Builder setLessThanOrEqualIdx(int value) {
      
      lessThanOrEqualIdx_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 less_than_or_equal_idx = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLessThanOrEqualIdx() {
      
      lessThanOrEqualIdx_ = 0;
      onChanged();
      return this;
    }

    private int splitFeatureIdx_ ;
    /**
     * <code>int32 split_feature_idx = 5;</code>
     * @return The splitFeatureIdx.
     */
    @java.lang.Override
    public int getSplitFeatureIdx() {
      return splitFeatureIdx_;
    }
    /**
     * <code>int32 split_feature_idx = 5;</code>
     * @param value The splitFeatureIdx to set.
     * @return This builder for chaining.
     */
    public Builder setSplitFeatureIdx(int value) {
      
      splitFeatureIdx_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 split_feature_idx = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitFeatureIdx() {
      
      splitFeatureIdx_ = 0;
      onChanged();
      return this;
    }

    private double splitValue_ ;
    /**
     * <code>double split_value = 6;</code>
     * @return The splitValue.
     */
    @java.lang.Override
    public double getSplitValue() {
      return splitValue_;
    }
    /**
     * <code>double split_value = 6;</code>
     * @param value The splitValue to set.
     * @return This builder for chaining.
     */
    public Builder setSplitValue(double value) {
      
      splitValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double split_value = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitValue() {
      
      splitValue_ = 0D;
      onChanged();
      return this;
    }

    private double impurity_ ;
    /**
     * <code>double impurity = 7;</code>
     * @return The impurity.
     */
    @java.lang.Override
    public double getImpurity() {
      return impurity_;
    }
    /**
     * <code>double impurity = 7;</code>
     * @param value The impurity to set.
     * @return This builder for chaining.
     */
    public Builder setImpurity(double value) {
      
      impurity_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double impurity = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearImpurity() {
      
      impurity_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tribuo.common.tree.SplitNodeProto)
  }

  // @@protoc_insertion_point(class_scope:tribuo.common.tree.SplitNodeProto)
  private static final org.tribuo.common.tree.protos.SplitNodeProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tribuo.common.tree.protos.SplitNodeProto();
  }

  public static org.tribuo.common.tree.protos.SplitNodeProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SplitNodeProto>
      PARSER = new com.google.protobuf.AbstractParser<SplitNodeProto>() {
    @java.lang.Override
    public SplitNodeProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SplitNodeProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SplitNodeProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SplitNodeProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tribuo.common.tree.protos.SplitNodeProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

