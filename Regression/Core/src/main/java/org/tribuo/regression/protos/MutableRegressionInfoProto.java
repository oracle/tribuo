// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tribuo-regression-core.proto

// Protobuf Java Version: 3.25.5
package org.tribuo.regression.protos;

/**
 * <pre>
 *
 *MutableRegressionInfoProto
 * </pre>
 *
 * Protobuf type {@code tribuo.regression.MutableRegressionInfoProto}
 */
public final class MutableRegressionInfoProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tribuo.regression.MutableRegressionInfoProto)
    MutableRegressionInfoProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MutableRegressionInfoProto.newBuilder() to construct.
  private MutableRegressionInfoProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MutableRegressionInfoProto() {
    label_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    count_ = emptyLongList();
    max_ = emptyDoubleList();
    min_ = emptyDoubleList();
    mean_ = emptyDoubleList();
    sumSquares_ = emptyDoubleList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MutableRegressionInfoProto();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_MutableRegressionInfoProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_MutableRegressionInfoProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tribuo.regression.protos.MutableRegressionInfoProto.class, org.tribuo.regression.protos.MutableRegressionInfoProto.Builder.class);
  }

  public static final int LABEL_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList label_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <code>repeated string label = 1;</code>
   * @return A list containing the label.
   */
  public com.google.protobuf.ProtocolStringList
      getLabelList() {
    return label_;
  }
  /**
   * <code>repeated string label = 1;</code>
   * @return The count of label.
   */
  public int getLabelCount() {
    return label_.size();
  }
  /**
   * <code>repeated string label = 1;</code>
   * @param index The index of the element to return.
   * @return The label at the given index.
   */
  public java.lang.String getLabel(int index) {
    return label_.get(index);
  }
  /**
   * <code>repeated string label = 1;</code>
   * @param index The index of the value to return.
   * @return The bytes of the label at the given index.
   */
  public com.google.protobuf.ByteString
      getLabelBytes(int index) {
    return label_.getByteString(index);
  }

  public static final int COUNT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.LongList count_ =
      emptyLongList();
  /**
   * <code>repeated int64 count = 2;</code>
   * @return A list containing the count.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getCountList() {
    return count_;
  }
  /**
   * <code>repeated int64 count = 2;</code>
   * @return The count of count.
   */
  public int getCountCount() {
    return count_.size();
  }
  /**
   * <code>repeated int64 count = 2;</code>
   * @param index The index of the element to return.
   * @return The count at the given index.
   */
  public long getCount(int index) {
    return count_.getLong(index);
  }
  private int countMemoizedSerializedSize = -1;

  public static final int MAX_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.DoubleList max_ =
      emptyDoubleList();
  /**
   * <code>repeated double max = 3;</code>
   * @return A list containing the max.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getMaxList() {
    return max_;
  }
  /**
   * <code>repeated double max = 3;</code>
   * @return The count of max.
   */
  public int getMaxCount() {
    return max_.size();
  }
  /**
   * <code>repeated double max = 3;</code>
   * @param index The index of the element to return.
   * @return The max at the given index.
   */
  public double getMax(int index) {
    return max_.getDouble(index);
  }
  private int maxMemoizedSerializedSize = -1;

  public static final int MIN_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.DoubleList min_ =
      emptyDoubleList();
  /**
   * <code>repeated double min = 4;</code>
   * @return A list containing the min.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getMinList() {
    return min_;
  }
  /**
   * <code>repeated double min = 4;</code>
   * @return The count of min.
   */
  public int getMinCount() {
    return min_.size();
  }
  /**
   * <code>repeated double min = 4;</code>
   * @param index The index of the element to return.
   * @return The min at the given index.
   */
  public double getMin(int index) {
    return min_.getDouble(index);
  }
  private int minMemoizedSerializedSize = -1;

  public static final int MEAN_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.DoubleList mean_ =
      emptyDoubleList();
  /**
   * <code>repeated double mean = 5;</code>
   * @return A list containing the mean.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getMeanList() {
    return mean_;
  }
  /**
   * <code>repeated double mean = 5;</code>
   * @return The count of mean.
   */
  public int getMeanCount() {
    return mean_.size();
  }
  /**
   * <code>repeated double mean = 5;</code>
   * @param index The index of the element to return.
   * @return The mean at the given index.
   */
  public double getMean(int index) {
    return mean_.getDouble(index);
  }
  private int meanMemoizedSerializedSize = -1;

  public static final int SUMSQUARES_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.DoubleList sumSquares_ =
      emptyDoubleList();
  /**
   * <code>repeated double sumSquares = 6;</code>
   * @return A list containing the sumSquares.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getSumSquaresList() {
    return sumSquares_;
  }
  /**
   * <code>repeated double sumSquares = 6;</code>
   * @return The count of sumSquares.
   */
  public int getSumSquaresCount() {
    return sumSquares_.size();
  }
  /**
   * <code>repeated double sumSquares = 6;</code>
   * @param index The index of the element to return.
   * @return The sumSquares at the given index.
   */
  public double getSumSquares(int index) {
    return sumSquares_.getDouble(index);
  }
  private int sumSquaresMemoizedSerializedSize = -1;

  public static final int UNKNOWNCOUNT_FIELD_NUMBER = 7;
  private int unknownCount_ = 0;
  /**
   * <code>int32 unknownCount = 7;</code>
   * @return The unknownCount.
   */
  @java.lang.Override
  public int getUnknownCount() {
    return unknownCount_;
  }

  public static final int OVERALLCOUNT_FIELD_NUMBER = 8;
  private long overallCount_ = 0L;
  /**
   * <code>int64 overallCount = 8;</code>
   * @return The overallCount.
   */
  @java.lang.Override
  public long getOverallCount() {
    return overallCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < label_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_.getRaw(i));
    }
    if (getCountList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(countMemoizedSerializedSize);
    }
    for (int i = 0; i < count_.size(); i++) {
      output.writeInt64NoTag(count_.getLong(i));
    }
    if (getMaxList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(maxMemoizedSerializedSize);
    }
    for (int i = 0; i < max_.size(); i++) {
      output.writeDoubleNoTag(max_.getDouble(i));
    }
    if (getMinList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(minMemoizedSerializedSize);
    }
    for (int i = 0; i < min_.size(); i++) {
      output.writeDoubleNoTag(min_.getDouble(i));
    }
    if (getMeanList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(meanMemoizedSerializedSize);
    }
    for (int i = 0; i < mean_.size(); i++) {
      output.writeDoubleNoTag(mean_.getDouble(i));
    }
    if (getSumSquaresList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(sumSquaresMemoizedSerializedSize);
    }
    for (int i = 0; i < sumSquares_.size(); i++) {
      output.writeDoubleNoTag(sumSquares_.getDouble(i));
    }
    if (unknownCount_ != 0) {
      output.writeInt32(7, unknownCount_);
    }
    if (overallCount_ != 0L) {
      output.writeInt64(8, overallCount_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < label_.size(); i++) {
        dataSize += computeStringSizeNoTag(label_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLabelList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < count_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(count_.getLong(i));
      }
      size += dataSize;
      if (!getCountList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      countMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMaxList().size();
      size += dataSize;
      if (!getMaxList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      maxMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMinList().size();
      size += dataSize;
      if (!getMinList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      minMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMeanList().size();
      size += dataSize;
      if (!getMeanList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      meanMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getSumSquaresList().size();
      size += dataSize;
      if (!getSumSquaresList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sumSquaresMemoizedSerializedSize = dataSize;
    }
    if (unknownCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, unknownCount_);
    }
    if (overallCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, overallCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tribuo.regression.protos.MutableRegressionInfoProto)) {
      return super.equals(obj);
    }
    org.tribuo.regression.protos.MutableRegressionInfoProto other = (org.tribuo.regression.protos.MutableRegressionInfoProto) obj;

    if (!getLabelList()
        .equals(other.getLabelList())) return false;
    if (!getCountList()
        .equals(other.getCountList())) return false;
    if (!getMaxList()
        .equals(other.getMaxList())) return false;
    if (!getMinList()
        .equals(other.getMinList())) return false;
    if (!getMeanList()
        .equals(other.getMeanList())) return false;
    if (!getSumSquaresList()
        .equals(other.getSumSquaresList())) return false;
    if (getUnknownCount()
        != other.getUnknownCount()) return false;
    if (getOverallCount()
        != other.getOverallCount()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getLabelCount() > 0) {
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabelList().hashCode();
    }
    if (getCountCount() > 0) {
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCountList().hashCode();
    }
    if (getMaxCount() > 0) {
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMaxList().hashCode();
    }
    if (getMinCount() > 0) {
      hash = (37 * hash) + MIN_FIELD_NUMBER;
      hash = (53 * hash) + getMinList().hashCode();
    }
    if (getMeanCount() > 0) {
      hash = (37 * hash) + MEAN_FIELD_NUMBER;
      hash = (53 * hash) + getMeanList().hashCode();
    }
    if (getSumSquaresCount() > 0) {
      hash = (37 * hash) + SUMSQUARES_FIELD_NUMBER;
      hash = (53 * hash) + getSumSquaresList().hashCode();
    }
    hash = (37 * hash) + UNKNOWNCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getUnknownCount();
    hash = (37 * hash) + OVERALLCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOverallCount());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.regression.protos.MutableRegressionInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tribuo.regression.protos.MutableRegressionInfoProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *
   *MutableRegressionInfoProto
   * </pre>
   *
   * Protobuf type {@code tribuo.regression.MutableRegressionInfoProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tribuo.regression.MutableRegressionInfoProto)
      org.tribuo.regression.protos.MutableRegressionInfoProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_MutableRegressionInfoProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_MutableRegressionInfoProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tribuo.regression.protos.MutableRegressionInfoProto.class, org.tribuo.regression.protos.MutableRegressionInfoProto.Builder.class);
    }

    // Construct using org.tribuo.regression.protos.MutableRegressionInfoProto.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      label_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      count_ = emptyLongList();
      max_ = emptyDoubleList();
      min_ = emptyDoubleList();
      mean_ = emptyDoubleList();
      sumSquares_ = emptyDoubleList();
      unknownCount_ = 0;
      overallCount_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_MutableRegressionInfoProto_descriptor;
    }

    @java.lang.Override
    public org.tribuo.regression.protos.MutableRegressionInfoProto getDefaultInstanceForType() {
      return org.tribuo.regression.protos.MutableRegressionInfoProto.getDefaultInstance();
    }

    @java.lang.Override
    public org.tribuo.regression.protos.MutableRegressionInfoProto build() {
      org.tribuo.regression.protos.MutableRegressionInfoProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tribuo.regression.protos.MutableRegressionInfoProto buildPartial() {
      org.tribuo.regression.protos.MutableRegressionInfoProto result = new org.tribuo.regression.protos.MutableRegressionInfoProto(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.tribuo.regression.protos.MutableRegressionInfoProto result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        label_.makeImmutable();
        result.label_ = label_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        count_.makeImmutable();
        result.count_ = count_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        max_.makeImmutable();
        result.max_ = max_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        min_.makeImmutable();
        result.min_ = min_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        mean_.makeImmutable();
        result.mean_ = mean_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        sumSquares_.makeImmutable();
        result.sumSquares_ = sumSquares_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.unknownCount_ = unknownCount_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.overallCount_ = overallCount_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tribuo.regression.protos.MutableRegressionInfoProto) {
        return mergeFrom((org.tribuo.regression.protos.MutableRegressionInfoProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tribuo.regression.protos.MutableRegressionInfoProto other) {
      if (other == org.tribuo.regression.protos.MutableRegressionInfoProto.getDefaultInstance()) return this;
      if (!other.label_.isEmpty()) {
        if (label_.isEmpty()) {
          label_ = other.label_;
          bitField0_ |= 0x00000001;
        } else {
          ensureLabelIsMutable();
          label_.addAll(other.label_);
        }
        onChanged();
      }
      if (!other.count_.isEmpty()) {
        if (count_.isEmpty()) {
          count_ = other.count_;
          count_.makeImmutable();
          bitField0_ |= 0x00000002;
        } else {
          ensureCountIsMutable();
          count_.addAll(other.count_);
        }
        onChanged();
      }
      if (!other.max_.isEmpty()) {
        if (max_.isEmpty()) {
          max_ = other.max_;
          max_.makeImmutable();
          bitField0_ |= 0x00000004;
        } else {
          ensureMaxIsMutable();
          max_.addAll(other.max_);
        }
        onChanged();
      }
      if (!other.min_.isEmpty()) {
        if (min_.isEmpty()) {
          min_ = other.min_;
          min_.makeImmutable();
          bitField0_ |= 0x00000008;
        } else {
          ensureMinIsMutable();
          min_.addAll(other.min_);
        }
        onChanged();
      }
      if (!other.mean_.isEmpty()) {
        if (mean_.isEmpty()) {
          mean_ = other.mean_;
          mean_.makeImmutable();
          bitField0_ |= 0x00000010;
        } else {
          ensureMeanIsMutable();
          mean_.addAll(other.mean_);
        }
        onChanged();
      }
      if (!other.sumSquares_.isEmpty()) {
        if (sumSquares_.isEmpty()) {
          sumSquares_ = other.sumSquares_;
          sumSquares_.makeImmutable();
          bitField0_ |= 0x00000020;
        } else {
          ensureSumSquaresIsMutable();
          sumSquares_.addAll(other.sumSquares_);
        }
        onChanged();
      }
      if (other.getUnknownCount() != 0) {
        setUnknownCount(other.getUnknownCount());
      }
      if (other.getOverallCount() != 0L) {
        setOverallCount(other.getOverallCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureLabelIsMutable();
              label_.add(s);
              break;
            } // case 10
            case 16: {
              long v = input.readInt64();
              ensureCountIsMutable();
              count_.addLong(v);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureCountIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                count_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            } // case 18
            case 25: {
              double v = input.readDouble();
              ensureMaxIsMutable();
              max_.addDouble(v);
              break;
            } // case 25
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureMaxIsMutable(alloc / 8);
              while (input.getBytesUntilLimit() > 0) {
                max_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            } // case 26
            case 33: {
              double v = input.readDouble();
              ensureMinIsMutable();
              min_.addDouble(v);
              break;
            } // case 33
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureMinIsMutable(alloc / 8);
              while (input.getBytesUntilLimit() > 0) {
                min_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            } // case 34
            case 41: {
              double v = input.readDouble();
              ensureMeanIsMutable();
              mean_.addDouble(v);
              break;
            } // case 41
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureMeanIsMutable(alloc / 8);
              while (input.getBytesUntilLimit() > 0) {
                mean_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            } // case 42
            case 49: {
              double v = input.readDouble();
              ensureSumSquaresIsMutable();
              sumSquares_.addDouble(v);
              break;
            } // case 49
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureSumSquaresIsMutable(alloc / 8);
              while (input.getBytesUntilLimit() > 0) {
                sumSquares_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            } // case 50
            case 56: {
              unknownCount_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              overallCount_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringArrayList label_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureLabelIsMutable() {
      if (!label_.isModifiable()) {
        label_ = new com.google.protobuf.LazyStringArrayList(label_);
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @return A list containing the label.
     */
    public com.google.protobuf.ProtocolStringList
        getLabelList() {
      label_.makeImmutable();
      return label_;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @return The count of label.
     */
    public int getLabelCount() {
      return label_.size();
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param index The index of the element to return.
     * @return The label at the given index.
     */
    public java.lang.String getLabel(int index) {
      return label_.get(index);
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the label at the given index.
     */
    public com.google.protobuf.ByteString
        getLabelBytes(int index) {
      return label_.getByteString(index);
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param index The index to set the value at.
     * @param value The label to set.
     * @return This builder for chaining.
     */
    public Builder setLabel(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureLabelIsMutable();
      label_.set(index, value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param value The label to add.
     * @return This builder for chaining.
     */
    public Builder addLabel(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureLabelIsMutable();
      label_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param values The label to add.
     * @return This builder for chaining.
     */
    public Builder addAllLabel(
        java.lang.Iterable<java.lang.String> values) {
      ensureLabelIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, label_);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLabel() {
      label_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param value The bytes of the label to add.
     * @return This builder for chaining.
     */
    public Builder addLabelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureLabelIsMutable();
      label_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList count_ = emptyLongList();
    private void ensureCountIsMutable() {
      if (!count_.isModifiable()) {
        count_ = makeMutableCopy(count_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @return A list containing the count.
     */
    public java.util.List<java.lang.Long>
        getCountList() {
      count_.makeImmutable();
      return count_;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @return The count of count.
     */
    public int getCountCount() {
      return count_.size();
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param index The index of the element to return.
     * @return The count at the given index.
     */
    public long getCount(int index) {
      return count_.getLong(index);
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param index The index to set the value at.
     * @param value The count to set.
     * @return This builder for chaining.
     */
    public Builder setCount(
        int index, long value) {

      ensureCountIsMutable();
      count_.setLong(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param value The count to add.
     * @return This builder for chaining.
     */
    public Builder addCount(long value) {

      ensureCountIsMutable();
      count_.addLong(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param values The count to add.
     * @return This builder for chaining.
     */
    public Builder addAllCount(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureCountIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, count_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCount() {
      count_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList max_ = emptyDoubleList();
    private void ensureMaxIsMutable() {
      if (!max_.isModifiable()) {
        max_ = makeMutableCopy(max_);
      }
      bitField0_ |= 0x00000004;
    }
    private void ensureMaxIsMutable(int capacity) {
      if (!max_.isModifiable()) {
        max_ = makeMutableCopy(max_, capacity);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>repeated double max = 3;</code>
     * @return A list containing the max.
     */
    public java.util.List<java.lang.Double>
        getMaxList() {
      max_.makeImmutable();
      return max_;
    }
    /**
     * <code>repeated double max = 3;</code>
     * @return The count of max.
     */
    public int getMaxCount() {
      return max_.size();
    }
    /**
     * <code>repeated double max = 3;</code>
     * @param index The index of the element to return.
     * @return The max at the given index.
     */
    public double getMax(int index) {
      return max_.getDouble(index);
    }
    /**
     * <code>repeated double max = 3;</code>
     * @param index The index to set the value at.
     * @param value The max to set.
     * @return This builder for chaining.
     */
    public Builder setMax(
        int index, double value) {

      ensureMaxIsMutable();
      max_.setDouble(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double max = 3;</code>
     * @param value The max to add.
     * @return This builder for chaining.
     */
    public Builder addMax(double value) {

      ensureMaxIsMutable();
      max_.addDouble(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double max = 3;</code>
     * @param values The max to add.
     * @return This builder for chaining.
     */
    public Builder addAllMax(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureMaxIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, max_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double max = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMax() {
      max_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList min_ = emptyDoubleList();
    private void ensureMinIsMutable() {
      if (!min_.isModifiable()) {
        min_ = makeMutableCopy(min_);
      }
      bitField0_ |= 0x00000008;
    }
    private void ensureMinIsMutable(int capacity) {
      if (!min_.isModifiable()) {
        min_ = makeMutableCopy(min_, capacity);
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>repeated double min = 4;</code>
     * @return A list containing the min.
     */
    public java.util.List<java.lang.Double>
        getMinList() {
      min_.makeImmutable();
      return min_;
    }
    /**
     * <code>repeated double min = 4;</code>
     * @return The count of min.
     */
    public int getMinCount() {
      return min_.size();
    }
    /**
     * <code>repeated double min = 4;</code>
     * @param index The index of the element to return.
     * @return The min at the given index.
     */
    public double getMin(int index) {
      return min_.getDouble(index);
    }
    /**
     * <code>repeated double min = 4;</code>
     * @param index The index to set the value at.
     * @param value The min to set.
     * @return This builder for chaining.
     */
    public Builder setMin(
        int index, double value) {

      ensureMinIsMutable();
      min_.setDouble(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double min = 4;</code>
     * @param value The min to add.
     * @return This builder for chaining.
     */
    public Builder addMin(double value) {

      ensureMinIsMutable();
      min_.addDouble(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double min = 4;</code>
     * @param values The min to add.
     * @return This builder for chaining.
     */
    public Builder addAllMin(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureMinIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, min_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double min = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMin() {
      min_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList mean_ = emptyDoubleList();
    private void ensureMeanIsMutable() {
      if (!mean_.isModifiable()) {
        mean_ = makeMutableCopy(mean_);
      }
      bitField0_ |= 0x00000010;
    }
    private void ensureMeanIsMutable(int capacity) {
      if (!mean_.isModifiable()) {
        mean_ = makeMutableCopy(mean_, capacity);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @return A list containing the mean.
     */
    public java.util.List<java.lang.Double>
        getMeanList() {
      mean_.makeImmutable();
      return mean_;
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @return The count of mean.
     */
    public int getMeanCount() {
      return mean_.size();
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @param index The index of the element to return.
     * @return The mean at the given index.
     */
    public double getMean(int index) {
      return mean_.getDouble(index);
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @param index The index to set the value at.
     * @param value The mean to set.
     * @return This builder for chaining.
     */
    public Builder setMean(
        int index, double value) {

      ensureMeanIsMutable();
      mean_.setDouble(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @param value The mean to add.
     * @return This builder for chaining.
     */
    public Builder addMean(double value) {

      ensureMeanIsMutable();
      mean_.addDouble(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @param values The mean to add.
     * @return This builder for chaining.
     */
    public Builder addAllMean(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureMeanIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, mean_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double mean = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMean() {
      mean_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList sumSquares_ = emptyDoubleList();
    private void ensureSumSquaresIsMutable() {
      if (!sumSquares_.isModifiable()) {
        sumSquares_ = makeMutableCopy(sumSquares_);
      }
      bitField0_ |= 0x00000020;
    }
    private void ensureSumSquaresIsMutable(int capacity) {
      if (!sumSquares_.isModifiable()) {
        sumSquares_ = makeMutableCopy(sumSquares_, capacity);
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @return A list containing the sumSquares.
     */
    public java.util.List<java.lang.Double>
        getSumSquaresList() {
      sumSquares_.makeImmutable();
      return sumSquares_;
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @return The count of sumSquares.
     */
    public int getSumSquaresCount() {
      return sumSquares_.size();
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @param index The index of the element to return.
     * @return The sumSquares at the given index.
     */
    public double getSumSquares(int index) {
      return sumSquares_.getDouble(index);
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @param index The index to set the value at.
     * @param value The sumSquares to set.
     * @return This builder for chaining.
     */
    public Builder setSumSquares(
        int index, double value) {

      ensureSumSquaresIsMutable();
      sumSquares_.setDouble(index, value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @param value The sumSquares to add.
     * @return This builder for chaining.
     */
    public Builder addSumSquares(double value) {

      ensureSumSquaresIsMutable();
      sumSquares_.addDouble(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @param values The sumSquares to add.
     * @return This builder for chaining.
     */
    public Builder addAllSumSquares(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureSumSquaresIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sumSquares_);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>repeated double sumSquares = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSumSquares() {
      sumSquares_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private int unknownCount_ ;
    /**
     * <code>int32 unknownCount = 7;</code>
     * @return The unknownCount.
     */
    @java.lang.Override
    public int getUnknownCount() {
      return unknownCount_;
    }
    /**
     * <code>int32 unknownCount = 7;</code>
     * @param value The unknownCount to set.
     * @return This builder for chaining.
     */
    public Builder setUnknownCount(int value) {

      unknownCount_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int32 unknownCount = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnknownCount() {
      bitField0_ = (bitField0_ & ~0x00000040);
      unknownCount_ = 0;
      onChanged();
      return this;
    }

    private long overallCount_ ;
    /**
     * <code>int64 overallCount = 8;</code>
     * @return The overallCount.
     */
    @java.lang.Override
    public long getOverallCount() {
      return overallCount_;
    }
    /**
     * <code>int64 overallCount = 8;</code>
     * @param value The overallCount to set.
     * @return This builder for chaining.
     */
    public Builder setOverallCount(long value) {

      overallCount_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int64 overallCount = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearOverallCount() {
      bitField0_ = (bitField0_ & ~0x00000080);
      overallCount_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tribuo.regression.MutableRegressionInfoProto)
  }

  // @@protoc_insertion_point(class_scope:tribuo.regression.MutableRegressionInfoProto)
  private static final org.tribuo.regression.protos.MutableRegressionInfoProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tribuo.regression.protos.MutableRegressionInfoProto();
  }

  public static org.tribuo.regression.protos.MutableRegressionInfoProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MutableRegressionInfoProto>
      PARSER = new com.google.protobuf.AbstractParser<MutableRegressionInfoProto>() {
    @java.lang.Override
    public MutableRegressionInfoProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MutableRegressionInfoProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MutableRegressionInfoProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tribuo.regression.protos.MutableRegressionInfoProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

