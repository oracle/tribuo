// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tribuo-regression-core.proto

package org.tribuo.regression.protos;

/**
 * <pre>
 *ImmutableRegressionInfoProto
 * </pre>
 *
 * Protobuf type {@code tribuo.regression.ImmutableRegressionInfoProto}
 */
public final class ImmutableRegressionInfoProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tribuo.regression.ImmutableRegressionInfoProto)
    ImmutableRegressionInfoProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImmutableRegressionInfoProto.newBuilder() to construct.
  private ImmutableRegressionInfoProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImmutableRegressionInfoProto() {
    label_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    count_ = emptyLongList();
    id_ = emptyIntList();
    max_ = emptyDoubleList();
    min_ = emptyDoubleList();
    mean_ = emptyDoubleList();
    sumSquares_ = emptyDoubleList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImmutableRegressionInfoProto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ImmutableRegressionInfoProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              label_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            label_.add(s);
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              count_ = newLongList();
              mutable_bitField0_ |= 0x00000002;
            }
            count_.addLong(input.readInt64());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              count_ = newLongList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              count_.addLong(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              id_ = newIntList();
              mutable_bitField0_ |= 0x00000004;
            }
            id_.addInt(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
              id_ = newIntList();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              id_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 33: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              max_ = newDoubleList();
              mutable_bitField0_ |= 0x00000008;
            }
            max_.addDouble(input.readDouble());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
              max_ = newDoubleList();
              mutable_bitField0_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              max_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 41: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              min_ = newDoubleList();
              mutable_bitField0_ |= 0x00000010;
            }
            min_.addDouble(input.readDouble());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
              min_ = newDoubleList();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              min_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 49: {
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              mean_ = newDoubleList();
              mutable_bitField0_ |= 0x00000020;
            }
            mean_.addDouble(input.readDouble());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
              mean_ = newDoubleList();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              mean_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 57: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              sumSquares_ = newDoubleList();
              mutable_bitField0_ |= 0x00000040;
            }
            sumSquares_.addDouble(input.readDouble());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
              sumSquares_ = newDoubleList();
              mutable_bitField0_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              sumSquares_.addDouble(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 64: {

            unknownCount_ = input.readInt32();
            break;
          }
          case 72: {

            overallCount_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        label_ = label_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        count_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        id_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        max_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        min_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        mean_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000040) != 0)) {
        sumSquares_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_ImmutableRegressionInfoProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_ImmutableRegressionInfoProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tribuo.regression.protos.ImmutableRegressionInfoProto.class, org.tribuo.regression.protos.ImmutableRegressionInfoProto.Builder.class);
  }

  public static final int LABEL_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList label_;
  /**
   * <code>repeated string label = 1;</code>
   * @return A list containing the label.
   */
  public com.google.protobuf.ProtocolStringList
      getLabelList() {
    return label_;
  }
  /**
   * <code>repeated string label = 1;</code>
   * @return The count of label.
   */
  public int getLabelCount() {
    return label_.size();
  }
  /**
   * <code>repeated string label = 1;</code>
   * @param index The index of the element to return.
   * @return The label at the given index.
   */
  public java.lang.String getLabel(int index) {
    return label_.get(index);
  }
  /**
   * <code>repeated string label = 1;</code>
   * @param index The index of the value to return.
   * @return The bytes of the label at the given index.
   */
  public com.google.protobuf.ByteString
      getLabelBytes(int index) {
    return label_.getByteString(index);
  }

  public static final int COUNT_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.LongList count_;
  /**
   * <code>repeated int64 count = 2;</code>
   * @return A list containing the count.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getCountList() {
    return count_;
  }
  /**
   * <code>repeated int64 count = 2;</code>
   * @return The count of count.
   */
  public int getCountCount() {
    return count_.size();
  }
  /**
   * <code>repeated int64 count = 2;</code>
   * @param index The index of the element to return.
   * @return The count at the given index.
   */
  public long getCount(int index) {
    return count_.getLong(index);
  }
  private int countMemoizedSerializedSize = -1;

  public static final int ID_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.IntList id_;
  /**
   * <code>repeated int32 id = 3;</code>
   * @return A list containing the id.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getIdList() {
    return id_;
  }
  /**
   * <code>repeated int32 id = 3;</code>
   * @return The count of id.
   */
  public int getIdCount() {
    return id_.size();
  }
  /**
   * <code>repeated int32 id = 3;</code>
   * @param index The index of the element to return.
   * @return The id at the given index.
   */
  public int getId(int index) {
    return id_.getInt(index);
  }
  private int idMemoizedSerializedSize = -1;

  public static final int MAX_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.DoubleList max_;
  /**
   * <code>repeated double max = 4;</code>
   * @return A list containing the max.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getMaxList() {
    return max_;
  }
  /**
   * <code>repeated double max = 4;</code>
   * @return The count of max.
   */
  public int getMaxCount() {
    return max_.size();
  }
  /**
   * <code>repeated double max = 4;</code>
   * @param index The index of the element to return.
   * @return The max at the given index.
   */
  public double getMax(int index) {
    return max_.getDouble(index);
  }
  private int maxMemoizedSerializedSize = -1;

  public static final int MIN_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.DoubleList min_;
  /**
   * <code>repeated double min = 5;</code>
   * @return A list containing the min.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getMinList() {
    return min_;
  }
  /**
   * <code>repeated double min = 5;</code>
   * @return The count of min.
   */
  public int getMinCount() {
    return min_.size();
  }
  /**
   * <code>repeated double min = 5;</code>
   * @param index The index of the element to return.
   * @return The min at the given index.
   */
  public double getMin(int index) {
    return min_.getDouble(index);
  }
  private int minMemoizedSerializedSize = -1;

  public static final int MEAN_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.DoubleList mean_;
  /**
   * <code>repeated double mean = 6;</code>
   * @return A list containing the mean.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getMeanList() {
    return mean_;
  }
  /**
   * <code>repeated double mean = 6;</code>
   * @return The count of mean.
   */
  public int getMeanCount() {
    return mean_.size();
  }
  /**
   * <code>repeated double mean = 6;</code>
   * @param index The index of the element to return.
   * @return The mean at the given index.
   */
  public double getMean(int index) {
    return mean_.getDouble(index);
  }
  private int meanMemoizedSerializedSize = -1;

  public static final int SUMSQUARES_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.DoubleList sumSquares_;
  /**
   * <code>repeated double sumSquares = 7;</code>
   * @return A list containing the sumSquares.
   */
  @java.lang.Override
  public java.util.List<java.lang.Double>
      getSumSquaresList() {
    return sumSquares_;
  }
  /**
   * <code>repeated double sumSquares = 7;</code>
   * @return The count of sumSquares.
   */
  public int getSumSquaresCount() {
    return sumSquares_.size();
  }
  /**
   * <code>repeated double sumSquares = 7;</code>
   * @param index The index of the element to return.
   * @return The sumSquares at the given index.
   */
  public double getSumSquares(int index) {
    return sumSquares_.getDouble(index);
  }
  private int sumSquaresMemoizedSerializedSize = -1;

  public static final int UNKNOWNCOUNT_FIELD_NUMBER = 8;
  private int unknownCount_;
  /**
   * <code>int32 unknownCount = 8;</code>
   * @return The unknownCount.
   */
  @java.lang.Override
  public int getUnknownCount() {
    return unknownCount_;
  }

  public static final int OVERALLCOUNT_FIELD_NUMBER = 9;
  private long overallCount_;
  /**
   * <code>int64 overallCount = 9;</code>
   * @return The overallCount.
   */
  @java.lang.Override
  public long getOverallCount() {
    return overallCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < label_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_.getRaw(i));
    }
    if (getCountList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(countMemoizedSerializedSize);
    }
    for (int i = 0; i < count_.size(); i++) {
      output.writeInt64NoTag(count_.getLong(i));
    }
    if (getIdList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(idMemoizedSerializedSize);
    }
    for (int i = 0; i < id_.size(); i++) {
      output.writeInt32NoTag(id_.getInt(i));
    }
    if (getMaxList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(maxMemoizedSerializedSize);
    }
    for (int i = 0; i < max_.size(); i++) {
      output.writeDoubleNoTag(max_.getDouble(i));
    }
    if (getMinList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(minMemoizedSerializedSize);
    }
    for (int i = 0; i < min_.size(); i++) {
      output.writeDoubleNoTag(min_.getDouble(i));
    }
    if (getMeanList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(meanMemoizedSerializedSize);
    }
    for (int i = 0; i < mean_.size(); i++) {
      output.writeDoubleNoTag(mean_.getDouble(i));
    }
    if (getSumSquaresList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(sumSquaresMemoizedSerializedSize);
    }
    for (int i = 0; i < sumSquares_.size(); i++) {
      output.writeDoubleNoTag(sumSquares_.getDouble(i));
    }
    if (unknownCount_ != 0) {
      output.writeInt32(8, unknownCount_);
    }
    if (overallCount_ != 0L) {
      output.writeInt64(9, overallCount_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < label_.size(); i++) {
        dataSize += computeStringSizeNoTag(label_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLabelList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < count_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(count_.getLong(i));
      }
      size += dataSize;
      if (!getCountList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      countMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < id_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(id_.getInt(i));
      }
      size += dataSize;
      if (!getIdList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      idMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMaxList().size();
      size += dataSize;
      if (!getMaxList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      maxMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMinList().size();
      size += dataSize;
      if (!getMinList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      minMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMeanList().size();
      size += dataSize;
      if (!getMeanList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      meanMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getSumSquaresList().size();
      size += dataSize;
      if (!getSumSquaresList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sumSquaresMemoizedSerializedSize = dataSize;
    }
    if (unknownCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, unknownCount_);
    }
    if (overallCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, overallCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tribuo.regression.protos.ImmutableRegressionInfoProto)) {
      return super.equals(obj);
    }
    org.tribuo.regression.protos.ImmutableRegressionInfoProto other = (org.tribuo.regression.protos.ImmutableRegressionInfoProto) obj;

    if (!getLabelList()
        .equals(other.getLabelList())) return false;
    if (!getCountList()
        .equals(other.getCountList())) return false;
    if (!getIdList()
        .equals(other.getIdList())) return false;
    if (!getMaxList()
        .equals(other.getMaxList())) return false;
    if (!getMinList()
        .equals(other.getMinList())) return false;
    if (!getMeanList()
        .equals(other.getMeanList())) return false;
    if (!getSumSquaresList()
        .equals(other.getSumSquaresList())) return false;
    if (getUnknownCount()
        != other.getUnknownCount()) return false;
    if (getOverallCount()
        != other.getOverallCount()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getLabelCount() > 0) {
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabelList().hashCode();
    }
    if (getCountCount() > 0) {
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCountList().hashCode();
    }
    if (getIdCount() > 0) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getIdList().hashCode();
    }
    if (getMaxCount() > 0) {
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMaxList().hashCode();
    }
    if (getMinCount() > 0) {
      hash = (37 * hash) + MIN_FIELD_NUMBER;
      hash = (53 * hash) + getMinList().hashCode();
    }
    if (getMeanCount() > 0) {
      hash = (37 * hash) + MEAN_FIELD_NUMBER;
      hash = (53 * hash) + getMeanList().hashCode();
    }
    if (getSumSquaresCount() > 0) {
      hash = (37 * hash) + SUMSQUARES_FIELD_NUMBER;
      hash = (53 * hash) + getSumSquaresList().hashCode();
    }
    hash = (37 * hash) + UNKNOWNCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getUnknownCount();
    hash = (37 * hash) + OVERALLCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOverallCount());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tribuo.regression.protos.ImmutableRegressionInfoProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *ImmutableRegressionInfoProto
   * </pre>
   *
   * Protobuf type {@code tribuo.regression.ImmutableRegressionInfoProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tribuo.regression.ImmutableRegressionInfoProto)
      org.tribuo.regression.protos.ImmutableRegressionInfoProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_ImmutableRegressionInfoProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_ImmutableRegressionInfoProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tribuo.regression.protos.ImmutableRegressionInfoProto.class, org.tribuo.regression.protos.ImmutableRegressionInfoProto.Builder.class);
    }

    // Construct using org.tribuo.regression.protos.ImmutableRegressionInfoProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      label_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      count_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      id_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      max_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000008);
      min_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000010);
      mean_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000020);
      sumSquares_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000040);
      unknownCount_ = 0;

      overallCount_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tribuo.regression.protos.TribuoRegressionCore.internal_static_tribuo_regression_ImmutableRegressionInfoProto_descriptor;
    }

    @java.lang.Override
    public org.tribuo.regression.protos.ImmutableRegressionInfoProto getDefaultInstanceForType() {
      return org.tribuo.regression.protos.ImmutableRegressionInfoProto.getDefaultInstance();
    }

    @java.lang.Override
    public org.tribuo.regression.protos.ImmutableRegressionInfoProto build() {
      org.tribuo.regression.protos.ImmutableRegressionInfoProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tribuo.regression.protos.ImmutableRegressionInfoProto buildPartial() {
      org.tribuo.regression.protos.ImmutableRegressionInfoProto result = new org.tribuo.regression.protos.ImmutableRegressionInfoProto(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        label_ = label_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.label_ = label_;
      if (((bitField0_ & 0x00000002) != 0)) {
        count_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.count_ = count_;
      if (((bitField0_ & 0x00000004) != 0)) {
        id_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.id_ = id_;
      if (((bitField0_ & 0x00000008) != 0)) {
        max_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.max_ = max_;
      if (((bitField0_ & 0x00000010) != 0)) {
        min_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.min_ = min_;
      if (((bitField0_ & 0x00000020) != 0)) {
        mean_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.mean_ = mean_;
      if (((bitField0_ & 0x00000040) != 0)) {
        sumSquares_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.sumSquares_ = sumSquares_;
      result.unknownCount_ = unknownCount_;
      result.overallCount_ = overallCount_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tribuo.regression.protos.ImmutableRegressionInfoProto) {
        return mergeFrom((org.tribuo.regression.protos.ImmutableRegressionInfoProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tribuo.regression.protos.ImmutableRegressionInfoProto other) {
      if (other == org.tribuo.regression.protos.ImmutableRegressionInfoProto.getDefaultInstance()) return this;
      if (!other.label_.isEmpty()) {
        if (label_.isEmpty()) {
          label_ = other.label_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureLabelIsMutable();
          label_.addAll(other.label_);
        }
        onChanged();
      }
      if (!other.count_.isEmpty()) {
        if (count_.isEmpty()) {
          count_ = other.count_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureCountIsMutable();
          count_.addAll(other.count_);
        }
        onChanged();
      }
      if (!other.id_.isEmpty()) {
        if (id_.isEmpty()) {
          id_ = other.id_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureIdIsMutable();
          id_.addAll(other.id_);
        }
        onChanged();
      }
      if (!other.max_.isEmpty()) {
        if (max_.isEmpty()) {
          max_ = other.max_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureMaxIsMutable();
          max_.addAll(other.max_);
        }
        onChanged();
      }
      if (!other.min_.isEmpty()) {
        if (min_.isEmpty()) {
          min_ = other.min_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureMinIsMutable();
          min_.addAll(other.min_);
        }
        onChanged();
      }
      if (!other.mean_.isEmpty()) {
        if (mean_.isEmpty()) {
          mean_ = other.mean_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureMeanIsMutable();
          mean_.addAll(other.mean_);
        }
        onChanged();
      }
      if (!other.sumSquares_.isEmpty()) {
        if (sumSquares_.isEmpty()) {
          sumSquares_ = other.sumSquares_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureSumSquaresIsMutable();
          sumSquares_.addAll(other.sumSquares_);
        }
        onChanged();
      }
      if (other.getUnknownCount() != 0) {
        setUnknownCount(other.getUnknownCount());
      }
      if (other.getOverallCount() != 0L) {
        setOverallCount(other.getOverallCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tribuo.regression.protos.ImmutableRegressionInfoProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tribuo.regression.protos.ImmutableRegressionInfoProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList label_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureLabelIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        label_ = new com.google.protobuf.LazyStringArrayList(label_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated string label = 1;</code>
     * @return A list containing the label.
     */
    public com.google.protobuf.ProtocolStringList
        getLabelList() {
      return label_.getUnmodifiableView();
    }
    /**
     * <code>repeated string label = 1;</code>
     * @return The count of label.
     */
    public int getLabelCount() {
      return label_.size();
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param index The index of the element to return.
     * @return The label at the given index.
     */
    public java.lang.String getLabel(int index) {
      return label_.get(index);
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the label at the given index.
     */
    public com.google.protobuf.ByteString
        getLabelBytes(int index) {
      return label_.getByteString(index);
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param index The index to set the value at.
     * @param value The label to set.
     * @return This builder for chaining.
     */
    public Builder setLabel(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLabelIsMutable();
      label_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param value The label to add.
     * @return This builder for chaining.
     */
    public Builder addLabel(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLabelIsMutable();
      label_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param values The label to add.
     * @return This builder for chaining.
     */
    public Builder addAllLabel(
        java.lang.Iterable<java.lang.String> values) {
      ensureLabelIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, label_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLabel() {
      label_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string label = 1;</code>
     * @param value The bytes of the label to add.
     * @return This builder for chaining.
     */
    public Builder addLabelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureLabelIsMutable();
      label_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList count_ = emptyLongList();
    private void ensureCountIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        count_ = mutableCopy(count_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @return A list containing the count.
     */
    public java.util.List<java.lang.Long>
        getCountList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(count_) : count_;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @return The count of count.
     */
    public int getCountCount() {
      return count_.size();
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param index The index of the element to return.
     * @return The count at the given index.
     */
    public long getCount(int index) {
      return count_.getLong(index);
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param index The index to set the value at.
     * @param value The count to set.
     * @return This builder for chaining.
     */
    public Builder setCount(
        int index, long value) {
      ensureCountIsMutable();
      count_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param value The count to add.
     * @return This builder for chaining.
     */
    public Builder addCount(long value) {
      ensureCountIsMutable();
      count_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @param values The count to add.
     * @return This builder for chaining.
     */
    public Builder addAllCount(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureCountIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, count_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCount() {
      count_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList id_ = emptyIntList();
    private void ensureIdIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        id_ = mutableCopy(id_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @return A list containing the id.
     */
    public java.util.List<java.lang.Integer>
        getIdList() {
      return ((bitField0_ & 0x00000004) != 0) ?
               java.util.Collections.unmodifiableList(id_) : id_;
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @return The count of id.
     */
    public int getIdCount() {
      return id_.size();
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @param index The index of the element to return.
     * @return The id at the given index.
     */
    public int getId(int index) {
      return id_.getInt(index);
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @param index The index to set the value at.
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        int index, int value) {
      ensureIdIsMutable();
      id_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @param value The id to add.
     * @return This builder for chaining.
     */
    public Builder addId(int value) {
      ensureIdIsMutable();
      id_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @param values The id to add.
     * @return This builder for chaining.
     */
    public Builder addAllId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, id_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList max_ = emptyDoubleList();
    private void ensureMaxIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        max_ = mutableCopy(max_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <code>repeated double max = 4;</code>
     * @return A list containing the max.
     */
    public java.util.List<java.lang.Double>
        getMaxList() {
      return ((bitField0_ & 0x00000008) != 0) ?
               java.util.Collections.unmodifiableList(max_) : max_;
    }
    /**
     * <code>repeated double max = 4;</code>
     * @return The count of max.
     */
    public int getMaxCount() {
      return max_.size();
    }
    /**
     * <code>repeated double max = 4;</code>
     * @param index The index of the element to return.
     * @return The max at the given index.
     */
    public double getMax(int index) {
      return max_.getDouble(index);
    }
    /**
     * <code>repeated double max = 4;</code>
     * @param index The index to set the value at.
     * @param value The max to set.
     * @return This builder for chaining.
     */
    public Builder setMax(
        int index, double value) {
      ensureMaxIsMutable();
      max_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double max = 4;</code>
     * @param value The max to add.
     * @return This builder for chaining.
     */
    public Builder addMax(double value) {
      ensureMaxIsMutable();
      max_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double max = 4;</code>
     * @param values The max to add.
     * @return This builder for chaining.
     */
    public Builder addAllMax(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureMaxIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, max_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double max = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMax() {
      max_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList min_ = emptyDoubleList();
    private void ensureMinIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        min_ = mutableCopy(min_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated double min = 5;</code>
     * @return A list containing the min.
     */
    public java.util.List<java.lang.Double>
        getMinList() {
      return ((bitField0_ & 0x00000010) != 0) ?
               java.util.Collections.unmodifiableList(min_) : min_;
    }
    /**
     * <code>repeated double min = 5;</code>
     * @return The count of min.
     */
    public int getMinCount() {
      return min_.size();
    }
    /**
     * <code>repeated double min = 5;</code>
     * @param index The index of the element to return.
     * @return The min at the given index.
     */
    public double getMin(int index) {
      return min_.getDouble(index);
    }
    /**
     * <code>repeated double min = 5;</code>
     * @param index The index to set the value at.
     * @param value The min to set.
     * @return This builder for chaining.
     */
    public Builder setMin(
        int index, double value) {
      ensureMinIsMutable();
      min_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double min = 5;</code>
     * @param value The min to add.
     * @return This builder for chaining.
     */
    public Builder addMin(double value) {
      ensureMinIsMutable();
      min_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double min = 5;</code>
     * @param values The min to add.
     * @return This builder for chaining.
     */
    public Builder addAllMin(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureMinIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, min_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double min = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMin() {
      min_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList mean_ = emptyDoubleList();
    private void ensureMeanIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        mean_ = mutableCopy(mean_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @return A list containing the mean.
     */
    public java.util.List<java.lang.Double>
        getMeanList() {
      return ((bitField0_ & 0x00000020) != 0) ?
               java.util.Collections.unmodifiableList(mean_) : mean_;
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @return The count of mean.
     */
    public int getMeanCount() {
      return mean_.size();
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @param index The index of the element to return.
     * @return The mean at the given index.
     */
    public double getMean(int index) {
      return mean_.getDouble(index);
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @param index The index to set the value at.
     * @param value The mean to set.
     * @return This builder for chaining.
     */
    public Builder setMean(
        int index, double value) {
      ensureMeanIsMutable();
      mean_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @param value The mean to add.
     * @return This builder for chaining.
     */
    public Builder addMean(double value) {
      ensureMeanIsMutable();
      mean_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @param values The mean to add.
     * @return This builder for chaining.
     */
    public Builder addAllMean(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureMeanIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, mean_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double mean = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMean() {
      mean_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.DoubleList sumSquares_ = emptyDoubleList();
    private void ensureSumSquaresIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        sumSquares_ = mutableCopy(sumSquares_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @return A list containing the sumSquares.
     */
    public java.util.List<java.lang.Double>
        getSumSquaresList() {
      return ((bitField0_ & 0x00000040) != 0) ?
               java.util.Collections.unmodifiableList(sumSquares_) : sumSquares_;
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @return The count of sumSquares.
     */
    public int getSumSquaresCount() {
      return sumSquares_.size();
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @param index The index of the element to return.
     * @return The sumSquares at the given index.
     */
    public double getSumSquares(int index) {
      return sumSquares_.getDouble(index);
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @param index The index to set the value at.
     * @param value The sumSquares to set.
     * @return This builder for chaining.
     */
    public Builder setSumSquares(
        int index, double value) {
      ensureSumSquaresIsMutable();
      sumSquares_.setDouble(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @param value The sumSquares to add.
     * @return This builder for chaining.
     */
    public Builder addSumSquares(double value) {
      ensureSumSquaresIsMutable();
      sumSquares_.addDouble(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @param values The sumSquares to add.
     * @return This builder for chaining.
     */
    public Builder addAllSumSquares(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureSumSquaresIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sumSquares_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double sumSquares = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSumSquares() {
      sumSquares_ = emptyDoubleList();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }

    private int unknownCount_ ;
    /**
     * <code>int32 unknownCount = 8;</code>
     * @return The unknownCount.
     */
    @java.lang.Override
    public int getUnknownCount() {
      return unknownCount_;
    }
    /**
     * <code>int32 unknownCount = 8;</code>
     * @param value The unknownCount to set.
     * @return This builder for chaining.
     */
    public Builder setUnknownCount(int value) {
      
      unknownCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 unknownCount = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnknownCount() {
      
      unknownCount_ = 0;
      onChanged();
      return this;
    }

    private long overallCount_ ;
    /**
     * <code>int64 overallCount = 9;</code>
     * @return The overallCount.
     */
    @java.lang.Override
    public long getOverallCount() {
      return overallCount_;
    }
    /**
     * <code>int64 overallCount = 9;</code>
     * @param value The overallCount to set.
     * @return This builder for chaining.
     */
    public Builder setOverallCount(long value) {
      
      overallCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 overallCount = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearOverallCount() {
      
      overallCount_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tribuo.regression.ImmutableRegressionInfoProto)
  }

  // @@protoc_insertion_point(class_scope:tribuo.regression.ImmutableRegressionInfoProto)
  private static final org.tribuo.regression.protos.ImmutableRegressionInfoProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tribuo.regression.protos.ImmutableRegressionInfoProto();
  }

  public static org.tribuo.regression.protos.ImmutableRegressionInfoProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImmutableRegressionInfoProto>
      PARSER = new com.google.protobuf.AbstractParser<ImmutableRegressionInfoProto>() {
    @java.lang.Override
    public ImmutableRegressionInfoProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ImmutableRegressionInfoProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ImmutableRegressionInfoProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImmutableRegressionInfoProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tribuo.regression.protos.ImmutableRegressionInfoProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

