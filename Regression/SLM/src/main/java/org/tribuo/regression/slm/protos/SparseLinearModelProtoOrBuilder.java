// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tribuo-regression-slm.proto

package org.tribuo.regression.slm.protos;

public interface SparseLinearModelProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tribuo.regression.mnb.SparseLinearModelProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.tribuo.core.ModelDataProto metadata = 1;</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <code>.tribuo.core.ModelDataProto metadata = 1;</code>
   * @return The metadata.
   */
  org.tribuo.protos.core.ModelDataProto getMetadata();
  /**
   * <code>.tribuo.core.ModelDataProto metadata = 1;</code>
   */
  org.tribuo.protos.core.ModelDataProtoOrBuilder getMetadataOrBuilder();

  /**
   * <code>repeated string dimensions = 2;</code>
   * @return A list containing the dimensions.
   */
  java.util.List<java.lang.String>
      getDimensionsList();
  /**
   * <code>repeated string dimensions = 2;</code>
   * @return The count of dimensions.
   */
  int getDimensionsCount();
  /**
   * <code>repeated string dimensions = 2;</code>
   * @param index The index of the element to return.
   * @return The dimensions at the given index.
   */
  java.lang.String getDimensions(int index);
  /**
   * <code>repeated string dimensions = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the dimensions at the given index.
   */
  com.google.protobuf.ByteString
      getDimensionsBytes(int index);

  /**
   * <code>repeated .tribuo.math.TensorProto weights = 3;</code>
   */
  java.util.List<org.tribuo.math.protos.TensorProto> 
      getWeightsList();
  /**
   * <code>repeated .tribuo.math.TensorProto weights = 3;</code>
   */
  org.tribuo.math.protos.TensorProto getWeights(int index);
  /**
   * <code>repeated .tribuo.math.TensorProto weights = 3;</code>
   */
  int getWeightsCount();
  /**
   * <code>repeated .tribuo.math.TensorProto weights = 3;</code>
   */
  java.util.List<? extends org.tribuo.math.protos.TensorProtoOrBuilder> 
      getWeightsOrBuilderList();
  /**
   * <code>repeated .tribuo.math.TensorProto weights = 3;</code>
   */
  org.tribuo.math.protos.TensorProtoOrBuilder getWeightsOrBuilder(
      int index);

  /**
   * <code>.tribuo.math.TensorProto feature_means = 4;</code>
   * @return Whether the featureMeans field is set.
   */
  boolean hasFeatureMeans();
  /**
   * <code>.tribuo.math.TensorProto feature_means = 4;</code>
   * @return The featureMeans.
   */
  org.tribuo.math.protos.TensorProto getFeatureMeans();
  /**
   * <code>.tribuo.math.TensorProto feature_means = 4;</code>
   */
  org.tribuo.math.protos.TensorProtoOrBuilder getFeatureMeansOrBuilder();

  /**
   * <code>.tribuo.math.TensorProto feature_norms = 5;</code>
   * @return Whether the featureNorms field is set.
   */
  boolean hasFeatureNorms();
  /**
   * <code>.tribuo.math.TensorProto feature_norms = 5;</code>
   * @return The featureNorms.
   */
  org.tribuo.math.protos.TensorProto getFeatureNorms();
  /**
   * <code>.tribuo.math.TensorProto feature_norms = 5;</code>
   */
  org.tribuo.math.protos.TensorProtoOrBuilder getFeatureNormsOrBuilder();

  /**
   * <code>bool bias = 6;</code>
   * @return The bias.
   */
  boolean getBias();

  /**
   * <code>repeated double y_mean = 7;</code>
   * @return A list containing the yMean.
   */
  java.util.List<java.lang.Double> getYMeanList();
  /**
   * <code>repeated double y_mean = 7;</code>
   * @return The count of yMean.
   */
  int getYMeanCount();
  /**
   * <code>repeated double y_mean = 7;</code>
   * @param index The index of the element to return.
   * @return The yMean at the given index.
   */
  double getYMean(int index);

  /**
   * <code>repeated double y_norm = 8;</code>
   * @return A list containing the yNorm.
   */
  java.util.List<java.lang.Double> getYNormList();
  /**
   * <code>repeated double y_norm = 8;</code>
   * @return The count of yNorm.
   */
  int getYNormCount();
  /**
   * <code>repeated double y_norm = 8;</code>
   * @param index The index of the element to return.
   * @return The yNorm at the given index.
   */
  double getYNorm(int index);
}
